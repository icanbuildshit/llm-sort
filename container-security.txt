# .github/workflows/container-security.yml

name: Container Security Scan

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'docker/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Dockerfile'
      - 'docker/**'
      - 'package.json'
      - 'package-lock.json'
  schedule:
    - cron: '0 3 * * 1'  # Weekly scan every Monday at 3 AM

permissions:
  contents: read
  security-events: write  # For uploading SARIF results
  packages: write         # For pushing to GitHub container registry

jobs:
  scan-build-push:
    name: Scan, Build and Push Container
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Build image with build cache for efficiency  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: dynagen-dashboard:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Trivy vulnerability scanner with detailed output
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dynagen-dashboard:${{ github.sha }}'
          format: 'template'
          template: '@/contrib/html.tpl'
          output: 'trivy-results.html'
          severity: 'CRITICAL,HIGH,MEDIUM'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
      
      # Generate SARIF output for GitHub code scanning
      - name: Run Trivy for SARIF output
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'dynagen-dashboard:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          vuln-type: 'os,library'
      
      # Upload Trivy scan results to GitHub Security tab
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
      
      # Upload detailed HTML results as artifact
      - name: Upload Trivy HTML report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: 'trivy-results.html'
      
      # Perform Docker security best practices check
      - name: Docker security check with Dockle
        uses: goodwithtech/dockle-action@v0.1.0
        with:
          image: 'dynagen-dashboard:${{ github.sha }}'
          format: 'json'
          output: 'dockle-results.json'
      
      # Upload Dockle report as artifact
      - name: Upload Dockle report
        uses: actions/upload-artifact@v3
        with:
          name: dockle-results
          path: 'dockle-results.json'
      
      # Login to container registry if vulnerabilities pass threshold
      - name: Log in to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && success() }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Tag and push container if all checks pass
      - name: Tag and push container
        if: ${{ github.event_name != 'pull_request' && success() }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/dynagen-dashboard:${{ github.sha }}
            ghcr.io/${{ github.repository }}/dynagen-dashboard:latest
          cache-from: type=gha
      
      # Scan container after push for further validation
      - name: Scan container in registry
        if: ${{ github.event_name != 'pull_request' && success() }}
        uses: anchore/scan-action@v3
        with:
          image: "ghcr.io/${{ github.repository }}/dynagen-dashboard:${{ github.sha }}"
          output-format: "sarif"
          output-file: "anchore-results.sarif"
      
      # Upload Anchore scan results
      - name: Upload Anchore scan results
        if: ${{ github.event_name != 'pull_request' && success() }}
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'anchore-results.sarif'
      
      # Notify on any issues found
      - name: Notify on security issues
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.25.0
        with:
          payload: |
            {
              "text": "⚠️ Container security scan found vulnerabilities or best practice violations in ${{ github.repository }}",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*⚠️ Container Security Issues*\nSecurity scan found vulnerabilities or best practice violations"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Repository: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nCommit: ${{ github.sha }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "See detailed report in workflow artifacts:\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
